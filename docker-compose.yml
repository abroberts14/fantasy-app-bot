version: '3.8'

services:

  backend:
    build: ./services/backend
    ports:
      - 5000:5000
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

    volumes:
      - ./services/backend:/app
    #command: bash -c "aerich upgrade && uvicorn src.main:app --reload --host 0.0.0.0 --port 5000"
  
    command: >
      bash -c "./wait_for_postgres.sh srcbot1.c7okouiqu9jh.us-east-1.rds.amazonaws.com 'aerich upgrade && uvicorn src.main:app --reload --host 0.0.0.0 --port 5000'"

    # depends_on:
    #   - db

  frontend:
    build: ./services/frontend
    volumes:
      - './services/frontend:/app'
      - './services/frontend/src:/app/src'
      - '/app/node_modules'
    ports:
      - 5173:5173

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com  # Email used to log into pgAdmin
      PGADMIN_DEFAULT_PASSWORD: admin           # Password used to log into pgAdmin
    ports:
      - "8080:80"  # Maps port 8080 on the host to port 80 in the container
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Persists pgAdmin data across container restarts

volumes:
  pgadmin_data:  # Declares a volume for pgAdmin data


  # db:
  #   image: postgres:15.1
  #   container_name: postgresql-local
  #   expose:
  #     - 5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=web
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/


  # pg_admin:
  #   image: dpage/pgadmin4:latest
  #   container_name: pgadmin4
  #   ports:
  #     - "54321:80"
  #   environment:
  #     - GUNICORN_THREADS=1
  #     - PGADMIN_DEFAULT_EMAIL=admin@admin.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   depends_on:
  #     - db
  # # chatbot:
  #   profiles: [chatbot]
  #   build: ./services/baseball_bot   
  #   image: chatbot:latest
  #   volumes:
  #     - ./services/baseball_bot:/app
# volumes:
#   postgres_data:
